Project Summary
Team 62
Members - 
- Grace Park: User Interface
- Jeri Shelly: API Calls
- Henry Chapman: Grapher

URL: https://github.com/UPenn-CIT599/Team-62New

We created a stock graphing application with Java. 

Features
User Interface Window
User can interact with 4 different input objects: 
1. Ticker symbol scrolling list
2. Time series scrolling list
3. Checkbox to add an optional trend line 
4. “Ok” button to retrieve stock price data
A user must select a ticker symbol and time duration to press the “Ok” button. 
Alpha Vantage (provider of API for realtime stock data) allows limited (5) free API 
calls per minute. If the user's requests exceed the limit, the “Ok” button becomes disabled and 
a timer above the “Ok” button will indicate the amount of seconds left until the next time 
the user can click the “Ok” button again. 
The ticker symbol list utilizes tooltips to show the company name when the mouse 
cursor hovers over a specific ticker symbol.

Graph
GraphConstructor takes in two arrays. One of the arrays contains doubles of every stock price. 
The other array contains strings of each corresponding time. 
Graph constructor paints every price and time on a JPanel. 
It connects each of these points to show the price changes over time. 

GraphConstructor also takes in a trendline as an array of doubles. 
This trendline, pulled directly from the alphavantage API, 
shows the moving average for each day during the time frame. 
GraphConstructor also draws a horizontal line across the graph 
from the first point to the end. This lets the user know how far the price 
went up or down across the time series. Finally, GraphConstructor sets the 
color of the data displayed based on whether the stock has gained value or 
lost value across the time series. If it has gained value, the line is 
colored green. Otherwise, the line is colored red. 

I wrote GraphConstructor to be as flexible as possible. This means it can graph 
any type of double that is passed to it via an array. It sets a flexible Y-Axis 
that shows a subrange from the data's smallest value to the data's largest value. 
It also plots labels sparingly, so readers do not get overwhelmed. 
I used drawString() and JLabels to create these labels. 

API Calls
I first started researching websites that provided stock quotes and found 
that Alpha Vantage was easy to use and provided straightforward documentation. 
Additionally Alpha Vantage returned the data as a JSON. I then found a 
free online Java library to assist with parsing through the JSON. After 
getting familiar with how to extract  data from the JSON, I created  
StockData class to neatly store the prices and times for any number of given days. 

The GraphConstructor takes data in the form of arrays, so after getting the data from 
Alpha Vantage, therefore we needed to take the data from the StockDataReader and pass
it through the DataConverter. The DataConvertered loops through the HashMap 
from the StockDataReader and uses the getters to retrieve the stock price or time
and add them to the Array which is passed to the GraphConstructor.
